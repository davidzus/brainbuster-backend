name: Java CI + Security

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

permissions:
  contents: read
  security-events: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B -DskipTests=false package

      - name: Upload JAR (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: |
            **/target/*.jar
          if-no-files-found: ignore

  sonarcloud:
    name: SonarCloud (SAST)
    needs: build
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_PROJECT_KEY: ${{ vars.SONAR_PROJECT_KEY }}
      SONAR_ORGANIZATION: ${{ vars.SONAR_ORGANIZATION }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Runs unit tests + code coverage if configured, plus Sonar analysis
      - name: Analyze with SonarCloud
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey="${SONAR_PROJECT_KEY}" \
            -Dsonar.organization="${SONAR_ORGANIZATION}" \
            -Dsonar.host.url="https://sonarcloud.io" \
            -Dsonar.login="${SONAR_TOKEN}"

  depcheck:
    name: OWASP Dependency-Check (Vuln scan)
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # GitHub Action wrapper around OWASP Dependency-Check
      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@v4
        with:
          project: "brainbuster-backend"
          path: "."
          format: "HTML,JSON,XML"
          out: "dependency-check-report"
          args: >
            --failOnCVSS 7
            --enableRetired
      - name: Upload Dependency-Check reports
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: dependency-check-report/

  gitleaks:
    name: Gitleaks (Secrets scan)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0   # full history helps secret detection

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: >
            detect
            --no-git
            --report-format sarif
            --report-path gitleaks.sarif

      - name: Upload SARIF to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gitleaks.sarif
