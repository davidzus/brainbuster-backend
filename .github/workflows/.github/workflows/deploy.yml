name: Deploy Backend on master

on:
  push:
    branches: [ master ]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/brainbuster-backend

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build (skip tests if you want faster)
        run: mvn -B -DskipTests package

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/java/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: SSH Deploy (port 3129)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 3129
          script: |
            set -e
            cd ${{ secrets.SERVER_WORKDIR }}

            # Ensure .env exists (we already created it, but keep idempotent)
            if [ ! -f .env ]; then
              echo "Missing .env"; exit 1
            fi

            # Pull latest image and restart app
            export IMAGE_TAG=latest
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker compose -f docker-compose.yml -f docker-compose.prod.yml pull app
            docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d --remove-orphans

            # Optional cleanup
            docker system prune -af --volumes || true
